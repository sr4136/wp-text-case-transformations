{"version":3,"file":"index.js","mappings":"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","sources":["webpack://sr-transform-text/./src/string-prototypes.js","webpack://sr-transform-text/external window [\"wp\",\"blockEditor\"]","webpack://sr-transform-text/external window [\"wp\",\"components\"]","webpack://sr-transform-text/external window [\"wp\",\"richText\"]","webpack://sr-transform-text/webpack/bootstrap","webpack://sr-transform-text/webpack/runtime/compat get default export","webpack://sr-transform-text/webpack/runtime/define property getters","webpack://sr-transform-text/webpack/runtime/hasOwnProperty shorthand","webpack://sr-transform-text/webpack/runtime/make namespace object","webpack://sr-transform-text/./src/index.js"],"sourcesContent":["const titleCapsExceptions = [\r\n  \"a\",\r\n  \"an\",\r\n  \"and\",\r\n  \"as\",\r\n  \"at\",\r\n  \"but\",\r\n  \"by\",\r\n  \"for\",\r\n  \"from\",\r\n  \"in\",\r\n  \"into\",\r\n  \"is\",\r\n  \"it\",\r\n  \"no\",\r\n  \"not\",\r\n  \"of\",\r\n  \"on\",\r\n  \"or\",\r\n  \"that\",\r\n  \"the\",\r\n  \"to\",\r\n  \"with\",\r\n];\r\n\r\n/**\r\n * Converts a string to title case.\r\n *\r\n * @returns {string} The string in title case.\r\n */\r\nfunction toTitleCaps() {\r\n  return this.toLowerCase()\r\n    .split(\" \")\r\n    .map((word, index) => {\r\n      if (index === 0 || !titleCapsExceptions.includes(word)) {\r\n        return word.charAt(0).toUpperCase() + word.slice(1);\r\n      } else {\r\n        return word;\r\n      }\r\n    })\r\n    .join(\" \");\r\n}\r\n\r\n// Export the function\r\nexport default toTitleCaps;\r\n","module.exports = window[\"wp\"][\"blockEditor\"];","module.exports = window[\"wp\"][\"components\"];","module.exports = window[\"wp\"][\"richText\"];","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import { BlockControls } from \"@wordpress/block-editor\";\r\nimport { Dropdown, ToolbarButton, ToolbarGroup } from \"@wordpress/components\";\r\nimport { registerFormatType } from \"@wordpress/rich-text\";\r\nimport toTitleCaps from \"./string-prototypes.js\";\r\n\r\n// Add the function to the String prototype\r\nString.prototype.toTitleCaps = toTitleCaps;\r\n\r\nconst transformText = (value, event) => {\r\n  //   console.log(\"RUNS\");\r\n  //   console.log(value);\r\n  //   console.log(event);\r\n\r\n  // Get the block's ID.\r\n  const selectedBlockClientId = wp.data\r\n    .select(\"core/block-editor\")\r\n    .getSelectedBlockClientId();\r\n\r\n  // Get the transform type.\r\n  const transformType = event.target.dataset.srTtt;\r\n\r\n  // Extract the substring to be transformed.\r\n  let transformedString = value.text.substring(value.start, value.end);\r\n\r\n  if (\"titlecaps\" === transformType) {\r\n    transformedString = transformedString.toTitleCaps();\r\n  }\r\n  if (\"uppercase\" === transformType) {\r\n    transformedString = transformedString.toUpperCase();\r\n  }\r\n  if (\"lowercase\" === transformType) {\r\n    transformedString = transformedString.toLowerCase();\r\n  }\r\n\r\n  // Construct the new text with the transformed substring.\r\n  const newText =\r\n    value.text.substring(0, value.start) +\r\n    transformedString +\r\n    value.text.substring(value.end);\r\n\r\n  // Run the update.\r\n  wp.data\r\n    .dispatch(\"core/block-editor\")\r\n    .updateBlockAttributes(selectedBlockClientId, {\r\n      content: newText,\r\n    });\r\n};\r\n\r\nconst TextTransformButton = ({ isActive, onChange, value }) => {\r\n  return (\r\n    <BlockControls>\r\n      <ToolbarGroup>\r\n        <Dropdown\r\n          renderToggle={({ isOpen, onToggle }) => (\r\n            <ToolbarButton\r\n              label=\"Text Transformations\"\r\n              icon=\"star-half\"\r\n              onClick={onToggle}\r\n              aria-expanded={isOpen}\r\n            />\r\n          )}\r\n          renderContent={() => (\r\n            <ToolbarGroup>\r\n              <ToolbarButton\r\n                icon=\"editor-ltr\"\r\n                data-sr-ttt=\"titlecaps\"\r\n                title=\"Title Caps\"\r\n                text=\"Title Caps\"\r\n                onClick={(event) => transformText(value, event)}\r\n                isActive={isActive}\r\n              />\r\n              <ToolbarButton\r\n                icon=\"arrow-up-alt\"\r\n                data-sr-ttt=\"uppercase\"\r\n                title=\"Uppercase\"\r\n                text=\"Uppercase\"\r\n                onClick={(event) => transformText(value, event)}\r\n                isActive={isActive}\r\n              />\r\n              <ToolbarButton\r\n                icon=\"arrow-down-alt\"\r\n                data-sr-ttt=\"lowercase\"\r\n                title=\"Lowercase\"\r\n                text=\"Lowercase\"\r\n                onClick={(event) => transformText(value, event)}\r\n                isActive={isActive}\r\n              />\r\n            </ToolbarGroup>\r\n          )}\r\n        />\r\n      </ToolbarGroup>\r\n    </BlockControls>\r\n  );\r\n};\r\n\r\nregisterFormatType(\"sr-wp-tct/blank-format\", {\r\n  title: \"Text Transforms\",\r\n  tagName: \"sr-wp-tct\",\r\n  className: null,\r\n  edit: TextTransformButton,\r\n});\r\n"],"names":["titleCapsExceptions","toTitleCaps","toLowerCase","split","map","word","index","includes","charAt","toUpperCase","slice","join","BlockControls","Dropdown","ToolbarButton","ToolbarGroup","registerFormatType","String","prototype","transformText","value","event","selectedBlockClientId","wp","data","select","getSelectedBlockClientId","transformType","target","dataset","srTtt","transformedString","text","substring","start","end","newText","dispatch","updateBlockAttributes","content","TextTransformButton","isActive","onChange","React","createElement","renderToggle","isOpen","onToggle","label","icon","onClick","renderContent","title","tagName","className","edit"],"sourceRoot":""}